@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@using System.Collections.Generic;
@using System.Linq;
@using AppSettingsConverter.Json
@using AppSettingsConverter.Model


@page "/LocalToAppSettings"

<h4>Convert LocalSettings To AppSettings</h4>

<div>
    <strong>SlotSettings : </strong>
    @foreach (var item in new string[] { "true", "false" })
    {
        <input type="radio" name="SlotSettings" id="@item" value="@item" @onchange="RadioSelection" checked=@(_radioValue.ToString().Equals(item,StringComparison.OrdinalIgnoreCase)) />
        <label for="@item">@item</label>
    }
</div>

<div>
    <div style="width:50%; height:100%; float:left;">
        <textarea id="beforeChange"
                  @bind="ConvertBeforeMessage"
                  @oninput="onChnage"
                  placeholder="Input Your LocalSettings JSON"
                  Style="width:95%; height: 85vh; margin:5px;" />
    </div>
    <div style="width:50%; height:100%; float:left;">
        <textarea id="afterChange"
                  @bind="ConvertMessage"
                  readonly
                  disabled
                  Style="width:100%; height: 85vh; margin:5px;" />
    </div>
    <div style="clear: both;"></div>
</div>

@code {
    private string ConvertBeforeMessage { get; set; }
    private string ConvertMessage { get; set; }
    private bool _radioValue = false;

    public void RadioSelection(ChangeEventArgs e)
    {
        _radioValue = bool.TryParse(e.Value.ToString(),out var radioCheck) && radioCheck;
        ConvertMessage = ConvertAppSettingsToAzure(ConvertBeforeMessage);
    }

    public void onChnage(ChangeEventArgs e)
    {
        ConvertMessage = ConvertAppSettingsToAzure(e.Value.ToString());
    }

    public string ConvertAppSettingsToAzure(string json)
    {
        if (string.IsNullOrEmpty(json)) return string.Empty;
        try
        {
            var resultObj = JObject.Parse(json).GetValue("Values");  
            var jsonResult = resultObj == null
                    ? JToken.Parse(json)
                    : JToken.Parse(resultObj.ToString());
            var fieldsCollector = new JsonFieldsCollector(jsonResult);
            var fields = fieldsCollector.GetAllFields();
            var list = (from item in fields
                        select new AzureAppSettingsModel
                        {
                            Name = item.Key.Replace(".", ":").ToString(),
                            Value = item.Value.ToString(),
                            SlotSetting = _radioValue
                        }).ToList();
            return JsonConvert.SerializeObject(list, Formatting.Indented);
        }
        catch
        {
            return $"This is unsupported Json Format!!";
        }
    }
}